@* EventRegistrationForm.razor *@
@using EventEase.Models
@using EventEase.Services

<EditForm Model="@registrationModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name:</label>
        <InputText id="name" @bind-Value="registrationModel.Name" class="form-control" />
        <ValidationMessage For="@(() => registrationModel.Name)" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="registrationModel.Email" type="email" class="form-control" />
        <ValidationMessage For="@(() => registrationModel.Email)" />
    </div>

    <div class="form-group">
        <label for="phone">Phone Number:</label>
        <InputText id="phone" @bind-Value="registrationModel.PhoneNumber" class="form-control" />
        <ValidationMessage For="@(() => registrationModel.PhoneNumber)" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@if (registrationSuccess)
{
    <p class="text-success">Registration successful for @EventName!</p>
}

@code {
    [Parameter]
    public string? EventName { get; set; }

    private RegistrationModel registrationModel = new RegistrationModel();
    private bool registrationSuccess = false;

    [Inject]
    private UserSessionService UserSessionService { get; set; } = new();

    private void HandleValidSubmit()
    {
        // Handle form submission (e.g., save the data)
        UserSessionService.SetSessionData($"RegistrationData_{EventName}", registrationModel);
        registrationSuccess = true;
    }
}